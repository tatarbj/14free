<?php
/**
 *
 *
 */

include_once "sites/all/libraries/phpqrcode/qrlib.php";
require DRUPAL_ROOT . "/vendor/autoload.php";

/**
 * Implements hook_menu().
 */
function oneforfree_qr_menu() {
  $items = [];

  $items['oneforfree/qr/generate/%/%'] = [
    'title' => t('Generate'),
    'page callback' => '_oneforfree_qr_generate',
    'page arguments' => array(3, 4),
    'access arguments' => array('generate oneforfree qr code'),
  ];

  $items['oneforfree/qr/register/%'] = [
    'title' => t('Registration'),
    'page callback' => '_oneforfree_qr_register',
    'page arguments' => array(3),
    'access arguments' => array('register oneforfree qr code'),
  ];

  $items['oneforfree/qr/check/%'] = [
    'title' => t('Check'),
    'page callback' => '_oneforfree_qr_check',
    'page arguments' => array(3),
    'access callback' => TRUE,
  ];

  return $items;
}

/**
 * Implements hook_permission().
 */
function oneforfree_qr_permission() {
  return [
    'generate oneforfree qr code' => [
      'title' => t('Generate OneForFree QR code'),
      'description' => t('Perform the generator action and creation of vouchers.'),
    ],
    'register oneforfree qr code' => [
      'title' => t('Register for OneForFree QR code'),
      'description' => t('Perform the registration of own voucher.'),
    ],
  ];
}

/**
 * Implements hook_node_insert().
 */
function oneforfree_qr_node_insert($node) {
  if ($node->type == 'event') {
    $result = db_select('users', 'u')
      ->fields('u', array('uid'))
      ->condition('uid', 0, '>')
      ->execute()
      ->fetchAll();
    foreach ($result as $uid) {
      _oneforfree_qr_generate($uid->uid, $node);
    }
  }
}

/**
 * Generator for QR code.
 */
function _oneforfree_qr_generate($user_id = 0, $event = 0) {
  $account = user_load($user_id);

  $business = $event->field_business[LANGUAGE_NONE][0]['target_id'];

  $qrpath = variable_get('file_public_path', conf_path() . '/files') . "/images/" . $account->uid . '-' . $event->nid . '-C-qr.png';

  $text = $account->mail . " - " . $event->nid . " - QR code";

  $voucher = new stdClass();
  $voucher->title = $text;
  $voucher->type = 'voucher';
  node_object_prepare($voucher);
  node_save($voucher);
  if (!file_exists($qrpath)) {
    QRcode::png('Content:' . url('/oneforfree/qr/check/' . $voucher->nid, array('absolute' => TRUE)), $qrpath);

    $filename = $account->uid . '-' . $event->nid . '-C-qr.png';
    $image = file_get_contents($qrpath);
    $file = file_save_data($image, 'public://' . $filename, FILE_EXISTS_RENAME);
    $voucher->field_qr_image = array(LANGUAGE_NONE => array('0' => (array)$file));
  }

  $voucher->language = LANGUAGE_NONE;
  $voucher->uid = $account->uid;
  $voucher->status = 1;

  // Term reference (taxonomy) field
  $voucher->field_event[LANGUAGE_NONE][]['target_id'] = $event->nid;
  $voucher->field_qr_code[LANGUAGE_NONE][]['value'] = $text;

  $voucher = node_submit($voucher); // Prepare node for saving
  node_save($voucher);

  return $text;
}

/**
 * Register for a voucher.
 */
function _oneforfree_qr_register($voucher_id) {
  global $user;
  $voucher = node_load($voucher_id);
  if ($voucher->uid == $user->uid && $voucher->field_status[LANGUAGE_NONE][0]['value'] == 0) {
    $voucher->field_status[LANGUAGE_NONE][0]['value'] = 1;
    node_save($voucher);
    drupal_set_message('Successful registration for the voucher!');
  }
  else if ($voucher->field_status[LANGUAGE_NONE][0]['value'] == 1) {
    drupal_set_message('You have already registered for this voucher!');
  }
  else if ($voucher->field_status[LANGUAGE_NONE][0]['value'] == 2) {
    drupal_set_message('You have already used this voucher!');
  }
  else {
    drupal_set_message('Voucher is invalid!');
  }
  return '';
}

/**
 * Check the QR code.
 */
function _oneforfree_qr_check($voucher_id) {
  $voucher = node_load($voucher_id);
  if ($voucher->field_status[LANGUAGE_NONE][0]['value'] == 1) {
    $event = node_load($voucher->field_event[LANGUAGE_NONE][0]['target_id']);
    if ($event->field_slots[LANGUAGE_NONE][0]['value'] > $event->field_used_slots[LANGUAGE_NONE][0]['value']) {
      $qrcode = new QrReader(drupal_realpath($voucher->field_qr_image[LANGUAGE_NONE][0]['uri']));
      drupal_set_message('Voucher is valid and it\'s now used!');
      $voucher->field_status[LANGUAGE_NONE][0]['value'] = 2;
      node_save($voucher);
      $event->field_used_slots[LANGUAGE_NONE][0]['value'] = 
        $event->field_used_slots[LANGUAGE_NONE][0]['value']+1;
      node_save($event);
    }
    else {
      drupal_set_message('There is no more available voucher!');
      return '';
    }
    return $qrcode->text();
  }
  else if ($voucher->field_status[LANGUAGE_NONE][0]['value'] == 2) {
    drupal_set_message('Voucher is already used!');
  }
  else if ($voucher->field_status[LANGUAGE_NONE][0]['value'] == 0) {
    drupal_set_message('Voucher is still not registered!');
  }
  else {
    drupal_set_message('Voucher is invalid!');
  }
  return '';
}
